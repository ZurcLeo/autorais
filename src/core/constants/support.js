// src/core/constants/support.js
import React from 'react';
import {
  Schedule as ScheduleIcon,
  Person as PersonIcon,
  CheckCircle as CheckCircleIcon,
  Info as InfoIcon,
  Warning as WarningIcon,
  Error as ErrorIcon,
  TrendingUp as TrendingUpIcon,
  Computer as ComputerIcon,
  AccountBalance as LoanIcon,
  AccessTime,
  Assignment,
  Done,
  Security as SecurityIcon,
  Chat as ChatIcon,
  AccountBalance
} from '@mui/icons-material';
import { alpha } from '@mui/material/styles';

// Configura√ß√µes de Status de Tickets
export const TICKET_STATUS_CONFIG = {
  pending: { 
    label: 'Pendente', 
    color: 'warning', 
    icon: <ScheduleIcon />,
    mui_color: 'warning'
  },
  assigned: { 
    label: 'Em Atendimento', 
    color: 'info', 
    icon: <PersonIcon />,
    mui_color: 'info'
  },
  resolved: { 
    label: 'Resolvido', 
    color: 'success', 
    icon: <CheckCircleIcon />,
    mui_color: 'success'
  },
  closed: { 
    label: 'Fechado', 
    color: 'default', 
    icon: <CheckCircleIcon />,
    mui_color: 'default'
  }
};

// Configura√ß√µes de Prioridade
export const PRIORITY_CONFIG = {
  low: { 
    label: 'Baixa', 
    color: 'success', 
    icon: <InfoIcon />,
    mui_color: '#4caf50'
  },
  medium: { 
    label: 'M√©dia', 
    color: 'warning', 
    icon: <WarningIcon />,
    mui_color: '#ff9800'
  },
  high: { 
    label: 'Alta', 
    color: 'error', 
    icon: <ErrorIcon />,
    mui_color: '#f44336'
  },
  urgent: { 
    label: 'Urgente', 
    color: 'error', 
    icon: <ErrorIcon />,
    mui_color: '#d32f2f'
  }
};

// Configura√ß√µes de Categorias
export const CATEGORY_CONFIG = {
  financial: { 
    label: 'Financeiro', 
    icon: 'üí∞', 
    mui_icon: <TrendingUpIcon />,
    color: 'secondary',
    description: 'Quest√µes relacionadas a transa√ß√µes, saldos e movimenta√ß√µes financeiras'
  },
  caixinha: { 
    label: 'Caixinha', 
    icon: 'üè¶', 
    mui_icon: <AccountBalance />,
    color: 'primary',
    description: 'Assuntos relacionados ao sistema de caixinhas'
  },
  loan: { 
    label: 'Empr√©stimos', 
    icon: 'üí≥', 
    mui_icon: <LoanIcon />,
    color: 'primary',
    description: 'Quest√µes sobre empr√©stimos, pagamentos e condi√ß√µes'
  },
  account: { 
    label: 'Conta', 
    icon: 'üë§', 
    mui_icon: <PersonIcon />,
    color: 'warning',
    description: 'Problemas com perfil, dados pessoais e configura√ß√µes de conta'
  },
  technical: { 
    label: 'T√©cnico', 
    icon: 'üîß', 
    mui_icon: <ComputerIcon />,
    color: 'info',
    description: 'Problemas t√©cnicos, bugs e funcionalidades do sistema'
  },
  security: { 
    label: 'Seguran√ßa', 
    icon: 'üîí', 
    mui_icon: <SecurityIcon />,
    color: 'error',
    description: 'Quest√µes de seguran√ßa, acessos e autentica√ß√£o'
  },
  general: { 
    label: 'Geral', 
    icon: 'üí¨', 
    mui_icon: <ChatIcon />,
    color: 'default',
    description: 'Outras quest√µes n√£o categorizadas'
  }
};

// Estrutura completa de categorias para cria√ß√£o de tickets
export const SUPPORT_CATEGORIES = {
  financial: {
    label: 'Financeiro',
    icon: 'üí∞',
    modules: {
      transactions: {
        label: 'Transa√ß√µes',
        issueTypes: [
          { value: 'failed_transaction', label: 'Transa√ß√£o n√£o processada' },
          { value: 'wrong_amount', label: 'Valor incorreto' },
          { value: 'duplicate_transaction', label: 'Transa√ß√£o duplicada' },
          { value: 'refund_request', label: 'Solicita√ß√£o de estorno' }
        ]
      },
      balance: {
        label: 'Saldo',
        issueTypes: [
          { value: 'incorrect_balance', label: 'Saldo incorreto' },
          { value: 'missing_deposit', label: 'Dep√≥sito n√£o creditado' },
          { value: 'unauthorized_withdrawal', label: 'Saque n√£o autorizado' }
        ]
      }
    }
  },
  caixinha: {
    label: 'Caixinha',
    icon: 'üè¶',
    modules: {
      participation: {
        label: 'Participa√ß√£o',
        issueTypes: [
          { value: 'join_group', label: 'N√£o consigo entrar no grupo' },
          { value: 'leave_group', label: 'N√£o consigo sair do grupo' },
          { value: 'payment_issue', label: 'Problema com pagamento' }
        ]
      },
      management: {
        label: 'Gest√£o',
        issueTypes: [
          { value: 'create_group', label: 'Erro ao criar grupo' },
          { value: 'member_management', label: 'Problema com membros' },
          { value: 'payout_issue', label: 'Problema com sorteio/pagamento' }
        ]
      }
    }
  },
  loan: {
    label: 'Empr√©stimos',
    icon: 'üí≥',
    modules: {
      application: {
        label: 'Solicita√ß√£o',
        issueTypes: [
          { value: 'application_rejected', label: 'Solicita√ß√£o rejeitada' },
          { value: 'application_pending', label: 'Solicita√ß√£o pendente h√° muito tempo' },
          { value: 'documentation_issue', label: 'Problema com documenta√ß√£o' }
        ]
      },
      payment: {
        label: 'Pagamento',
        issueTypes: [
          { value: 'payment_failed', label: 'Falha no pagamento' },
          { value: 'payment_schedule', label: 'Altera√ß√£o de cronograma' },
          { value: 'early_payment', label: 'Pagamento antecipado' }
        ]
      }
    }
  },
  account: {
    label: 'Conta',
    icon: 'üë§',
    modules: {
      profile: {
        label: 'Perfil',
        issueTypes: [
          { value: 'update_info', label: 'Atualizar informa√ß√µes' },
          { value: 'verify_identity', label: 'Verifica√ß√£o de identidade' },
          { value: 'change_phone', label: 'Alterar telefone' }
        ]
      },
      access: {
        label: 'Acesso',
        issueTypes: [
          { value: 'forgot_password', label: 'Esqueci a senha' },
          { value: 'account_blocked', label: 'Conta bloqueada' },
          { value: 'login_issue', label: 'Problema para entrar' }
        ]
      }
    }
  },
  technical: {
    label: 'T√©cnico',
    icon: 'üîß',
    modules: {
      app: {
        label: 'Aplicativo',
        issueTypes: [
          { value: 'app_crash', label: 'App fechando sozinho' },
          { value: 'slow_performance', label: 'App lento' },
          { value: 'feature_not_working', label: 'Funcionalidade n√£o funciona' }
        ]
      },
      web: {
        label: 'Site',
        issueTypes: [
          { value: 'page_not_loading', label: 'P√°gina n√£o carrega' },
          { value: 'display_issue', label: 'Problema de exibi√ß√£o' },
          { value: 'browser_compatibility', label: 'Incompatibilidade do navegador' }
        ]
      }
    }
  },
  security: {
    label: 'Seguran√ßa',
    icon: 'üîí',
    modules: {
      suspicious: {
        label: 'Atividade Suspeita',
        issueTypes: [
          { value: 'unauthorized_access', label: 'Acesso n√£o autorizado' },
          { value: 'suspicious_transaction', label: 'Transa√ß√£o suspeita' },
          { value: 'phishing', label: 'Tentativa de golpe/phishing' }
        ]
      },
      privacy: {
        label: 'Privacidade',
        issueTypes: [
          { value: 'data_deletion', label: 'Excluir meus dados' },
          { value: 'privacy_settings', label: 'Configura√ß√µes de privacidade' },
          { value: 'data_breach', label: 'Poss√≠vel vazamento de dados' }
        ]
      }
    }
  },
  general: {
    label: 'Geral',
    icon: 'üí¨',
    modules: {
      feedback: {
        label: 'Feedback',
        issueTypes: [
          { value: 'suggestion', label: 'Sugest√£o de melhoria' },
          { value: 'complaint', label: 'Reclama√ß√£o' },
          { value: 'compliment', label: 'Elogio' }
        ]
      },
      other: {
        label: 'Outros',
        issueTypes: [
          { value: 'information', label: 'Solicitar informa√ß√µes' },
          { value: 'partnership', label: 'Proposta de parceria' },
          { value: 'other_issue', label: 'Outro assunto' }
        ]
      }
    }
  }
};

// Fun√ß√µes utilit√°rias para obter configura√ß√µes com tema
export const getStatusConfig = (status, theme) => {
  const config = TICKET_STATUS_CONFIG[status] || TICKET_STATUS_CONFIG.pending;
  return {
    ...config,
    backgroundColor: theme ? alpha(theme.palette[config.color]?.main || '#666', 0.1) : undefined,
    textColor: theme ? theme.palette[config.color]?.main || '#666' : undefined
  };
};

export const getPriorityConfig = (priority, theme) => {
  const config = PRIORITY_CONFIG[priority] || PRIORITY_CONFIG.medium;
  return {
    ...config,
    backgroundColor: theme ? alpha(config.mui_color, 0.1) : undefined,
    textColor: theme ? config.mui_color : undefined
  };
};

export const getCategoryConfig = (category) => {
  return CATEGORY_CONFIG[category] || CATEGORY_CONFIG.general;
};

// Fun√ß√µes utilit√°rias para formata√ß√£o
export const formatTicketId = (id) => {
  return `#${id.substring(0, 8).toUpperCase()}`;
};

export const formatDate = (date) => {
  if (!date) return 'Data n√£o dispon√≠vel';
  
  try {
    const d = new Date(date);
    if (isNaN(d.getTime())) return 'Data inv√°lida';
    
    return new Intl.DateTimeFormat('pt-BR', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    }).format(d);
  } catch (error) {
    return 'Erro ao formatar data';
  }
};

export const formatRelativeTime = (date) => {
  if (!date) return 'Data n√£o dispon√≠vel';
  
  try {
    const now = new Date();
    const targetDate = new Date(date);
    const diff = now - targetDate;
    const seconds = Math.floor(diff / 1000);
    const minutes = Math.floor(seconds / 60);
    const hours = Math.floor(minutes / 60);
    const days = Math.floor(hours / 24);
    
    if (days > 0) return `${days} dia${days > 1 ? 's' : ''} atr√°s`;
    if (hours > 0) return `${hours} hora${hours > 1 ? 's' : ''} atr√°s`;
    if (minutes > 0) return `${minutes} minuto${minutes > 1 ? 's' : ''} atr√°s`;
    return 'Agora mesmo';
  } catch (error) {
    return 'Erro ao calcular tempo';
  }
};

// Estados de dashboard/filtros
export const FILTER_OPTIONS = {
  status: [
    { value: 'all', label: 'Todos os Status' },
    { value: 'pending', label: 'Pendente' },
    { value: 'assigned', label: 'Em Atendimento' },
    { value: 'resolved', label: 'Resolvido' },
    { value: 'closed', label: 'Fechado' }
  ],
  priority: [
    { value: 'all', label: 'Todas as Prioridades' },
    { value: 'urgent', label: 'Urgente' },
    { value: 'high', label: 'Alta' },
    { value: 'medium', label: 'M√©dia' },
    { value: 'low', label: 'Baixa' }
  ],
  category: [
    { value: 'all', label: 'Todas as Categorias' },
    ...Object.entries(CATEGORY_CONFIG).map(([key, config]) => ({
      value: key,
      label: config.label
    }))
  ]
};

