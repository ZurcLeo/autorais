import React from 'react';
import { Typography, Box, Paper, Alert, Divider } from '@mui/material';
import { SystemDiagram } from '../components/SystemDiagram.tsx'; // Certifique-se de que o caminho para SystemDiagram est√° correto

// Dados dos n√≥s para o diagrama de autentica√ß√£o
const authNodesData = {
    'ErrorBoundary': {
        label: 'ErrorBoundaryProvider',
        status: 'stable',
        color: '#4caf50',
        description: 'Garante a captura global de erros inesperados',
        details: {
            status: 'Est√°vel',
            respons√°vel: 'Equipe Core',
            ultimaAtualiza√ß√£o: '2025-01-15'
        }
    },
    'CoreLogger': {
        label: 'CoreLoggerProvider',
        status: 'stable',
        color: '#4caf50',
        description: 'Inicializa o sistema de logging centralizado',
        details: {
            status: 'Est√°vel',
            respons√°vel: 'Equipe Core',
            ultimaAtualiza√ß√£o: '2025-01-20'
        }
    },
    'Bootstrap': {
        label: 'BootstrapProvider',
        status: 'stable',
        color: '#4caf50',
        description: 'Arranque dos sistemas e servi√ßos essenciais',
        details: {
            status: 'Est√°vel',
            respons√°vel: 'Equipe Core',
            ultimaAtualiza√ß√£o: '2025-01-25'
        }
    },
    'Auth': {
        label: 'AuthProvider',
        status: 'attention',
        color: '#ff9800',
        description: '[PROBLEMA CR√çTICO] Timing incorreto na inicializa√ß√£o!',
        details: {
            status: 'Aten√ß√£o',
            respons√°vel: 'Equipe de Seguran√ßa',
            ultimaAtualiza√ß√£o: '2025-02-10',
            problema: 'Race condition na inicializa√ß√£o'
        }
    },
    'TokenManager': {
        label: 'TokenManager',
        status: 'attention',
        color: '#ff9800',
        description: 'Gerenciamento de tokens de autentica√ß√£o (JWT)',
        details: {
            status: 'Aten√ß√£o',
            respons√°vel: 'Equipe de Seguran√ßa',
            ultimaAtualiza√ß√£o: '2025-02-05',
            problema: 'Vazamento de mem√≥ria na gest√£o de tokens'
        }
    },
    'AuthService': {
        label: 'AuthService',
        status: 'attention',
        color: '#ff9800',
        description: 'Servi√ßo dedicado √† autentica√ß√£o de usu√°rios',
        details: {
            status: 'Aten√ß√£o',
            respons√°vel: 'Equipe de Seguran√ßa',
            ultimaAtualiza√ß√£o: '2025-02-08',
            problema: 'Depend√™ncias circulares'
        }
    }
};

// Defini√ß√£o do diagrama de autentica√ß√£o em sintaxe Mermaid
const authDiagramDefinition = `
    ErrorBoundary --> CoreLogger
    CoreLogger --> Bootstrap
    Bootstrap --> Auth
    Auth --> TokenManager
    Auth --> AuthService

    %% Estiliza√ß√£o dos n√≥s
    style ErrorBoundary fill:#4caf50,stroke:#333,stroke-width:2px
    style CoreLogger fill:#4caf50,stroke:#333,stroke-width:2px
    style Bootstrap fill:#4caf50,stroke:#333,stroke-width:2px
    style Auth fill:#ff9800,stroke:#333,stroke-width:2px
    style TokenManager fill:#ff9800,stroke:#333,stroke-width:2px
    style AuthService fill:#ff9800,stroke:#333,stroke-width:2px
`;

// Diagrama detalhado em sintaxe Mermaid
const authDetailedDiagramDefinition = `
    ErrorBoundary --> CoreLogger
    CoreLogger --> Bootstrap
    Bootstrap --> Auth
    Auth --> TokenManager
    Auth --> AuthService
    TokenManager --> CookieStore
    TokenManager --> JwtValidator
    AuthService --> ApiClient
    AuthService --> OAuthManager

    %% Estiliza√ß√£o dos n√≥s
    style ErrorBoundary fill:#4caf50,stroke:#333,stroke-width:2px
    style CoreLogger fill:#4caf50,stroke:#333,stroke-width:2px
    style Bootstrap fill:#4caf50,stroke:#333,stroke-width:2px
    style Auth fill:#ff9800,stroke:#333,stroke-width:2px
    style TokenManager fill:#ff9800,stroke:#333,stroke-width:2px
    style AuthService fill:#ff9800,stroke:#333,stroke-width:2px
    style CookieStore fill:#2196f3,stroke:#333,stroke-width:2px
    style JwtValidator fill:#2196f3,stroke:#333,stroke-width:2px
    style ApiClient fill:#2196f3,stroke:#333,stroke-width:2px
    style OAuthManager fill:#2196f3,stroke:#333,stroke-width:2px
`;

// Diagrama simplificado em sintaxe Mermaid
const authSimpleDiagramDefinition = `
    CoreSystem --> Auth
    Auth --> Services

    %% Estiliza√ß√£o dos n√≥s
    style CoreSystem fill:#4caf50,stroke:#333,stroke-width:2px
    style Auth fill:#ff9800,stroke:#333,stroke-width:2px
    style Services fill:#2196f3,stroke:#333,stroke-width:2px
`;

/**
 * **Documenta√ß√£o do Sistema de Autentica√ß√£o**
 *
 * Este documento detalha a implementa√ß√£o e o fluxo do sistema de autentica√ß√£o,
 * abrangendo a inicializa√ß√£o, a gest√£o de estado e o tratamento de erros.
 *
 * ---
 */
const AuthenticationDoc: React.FC = () => {
    const [selectedNode, setSelectedNode] = React.useState<string | null>(null);
    const [detailLevel, setDetailLevel] = React.useState<'simple' | 'standard' | 'detailed'>('standard');

    // Fun√ß√£o para selecionar a defini√ß√£o do diagrama com base no n√≠vel de detalhe
    const getDiagramDefinition = () => {
        switch (detailLevel) {
            case 'simple':
                return authSimpleDiagramDefinition;
            case 'detailed':
                return authDetailedDiagramDefinition;
            case 'standard':
            default:
                return authDiagramDefinition;
        }
    };

    // Handler para sele√ß√£o de n√≥
    const handleNodeSelect = (nodeId: string) => {
        setSelectedNode(nodeId);
        // Aqui voc√™ poderia implementar l√≥gica adicional, como scroll para a se√ß√£o
        // correspondente ou exibir informa√ß√µes espec√≠ficas
    };


    return (
        <Box component="article">
            <Typography variant="h1" gutterBottom component="h1">
                Documenta√ß√£o do Sistema de Autentica√ß√£o
            </Typography>

            <Box className="section">
                <Alert severity="warning">
                    <Typography variant="h6" gutterBottom component="h6">
                        Aten√ß√£o: Problemas Cr√≠ticos de Timing na Inicializa√ß√£o
                    </Typography>
                    <div>
                        Foram identificados problemas cr√≠ticos de timing durante o processo de inicializa√ß√£o.
                        Consulte a se√ß√£o "<strong>Problemas Conhecidos</strong>" para obter detalhes e entender o impacto.
                    </div>
                </Alert>
            </Box>

            {/* Integra√ß√£o do SystemDiagram */}
            <Box className="section" sx={{ my: 4 }}>
                <Typography variant="h2" gutterBottom component="h2">
                    Fluxo de Inicializa√ß√£o do Sistema
                </Typography>

                <SystemDiagram
                    mode="light"
                    detailLevel={detailLevel}
                    interactive={true}
                    layout="TD"
                    diagramType="flowchart"
                    definition={getDiagramDefinition()}
                    onNodeSelect={handleNodeSelect}
                    nodesData={authNodesData}
                    title="Diagrama de Inicializa√ß√£o do Sistema de Autentica√ß√£o"
                    description="Visualiza√ß√£o do fluxo de inicializa√ß√£o dos componentes de autentica√ß√£o e suas depend√™ncias"
                />

                {/* Se√ß√£o que mostra mais detalhes sobre o n√≥ selecionado */}
                {selectedNode && authNodesData[selectedNode] && (
                    <Paper sx={{ p: 3, mt: 3, bgcolor: 'background.paper' }}>
                        <Typography variant="h5" gutterBottom>
                            Detalhes: {authNodesData[selectedNode].label}
                        </Typography>
                        <Typography variant="body1" paragraph>
                            {authNodesData[selectedNode].description}
                        </Typography>

                        {selectedNode === 'Auth' && (
                            <Alert severity="warning">
                                O AuthProvider apresenta um problema cr√≠tico de timing durante a inicializa√ß√£o,
                                tentando acessar depend√™ncias antes delas estarem completamente inicializadas.
                                Isso resulta em comportamento inconsistente e potenciais falhas.
                            </Alert>
                        )}

                        {selectedNode === 'TokenManager' && (
                            <Alert severity="warning">
                                O TokenManager n√£o est√° realizando a limpeza adequada de tokens expirados,
                                causando um potencial vazamento de mem√≥ria ao longo do tempo.
                            </Alert>
                        )}
                    </Paper>
                )}
            </Box>


            <Box className="section">
                <Typography variant="h2" gutterBottom component="h2">
                    üîç Problemas Conhecidos e Impactos
                </Typography>

                <Paper className="error" sx={{ bgcolor: 'error.light', color: 'error.contrastText' }}>

                    <Box className="subsection">
                        <Typography variant="h3" gutterBottom component="h3">
                            1. üö® Condi√ß√£o de Corrida (Race Condition) na Inicializa√ß√£o do AuthProvider
                        </Typography>
                        <Box className="subsection" >
                            O <code>AuthProvider</code> est√° prematuramente tentando acessar outros servi√ßos e depend√™ncias <strong>antes</strong> que eles sejam totalmente inicializados.
                            <br />
                            <strong>Evid√™ncias concretas extra√≠das dos logs do sistema:</strong>
                            <Typography component="pre">
                                {
                                    `[ServiceInitializer] Starting initialization of service: auth
                [RetryManager] Starting service: user
                // ‚ö†Ô∏è User service (depend√™ncia) iniciada ANTES do AuthProvider ser pronto!`
                                }
                            </Typography>
                            <Alert severity="warning" variant="outlined">
                                <div>
                                    <strong>Impacto Imediato:</strong> Falhas intermitentes na autentica√ß√£o durante a inicializa√ß√£o.
                                    <br />
                                    <strong>Risco Futuro:</strong> Instabilidade e comportamentos inesperados, especialmente em ambientes com alta carga ou reinicializa√ß√µes frequentes.
                                </div>
                            </Alert>
                        </Box>
                        <Divider />
                    </Box>

                    <Box className="subsection">
                        <Typography variant="h3" gutterBottom component="h3">
                            2. üï≥Ô∏è Vazamento de Mem√≥ria no <code>TokenManager</code>
                        </Typography>
                        <div>
                            O <code>TokenManager</code> n√£o est√° realizando a limpeza (garbage collection) de tokens expirados de forma eficiente. Isso leva a um <strong>ac√∫mulo gradual de mem√≥ria</strong>,
                            podendo degradar a performance da aplica√ß√£o ao longo do tempo, especialmente em sess√µes longas ou com muitos usu√°rios.
                            <Alert severity="warning" variant="outlined">
                                <div>
                                    <strong>Impacto Imediato:</strong> Nenhum cr√≠tico no momento, mas...
                                    <br />
                                    <strong>Risco Futuro:</strong>  <strong>Degrada√ß√£o de performance</strong> e potencial <strong>estabilidade comprometida</strong> em longo prazo devido ao consumo excessivo de mem√≥ria.
                                </div>
                            </Alert>
                        </div>
                    </Box>
                </Paper>
            </Box>

            <Box className="section">
                <Typography variant="h2" gutterBottom component="h2">
                    üõ†Ô∏è Solu√ß√µes Propostas e Implementa√ß√µes
                </Typography>

                <Box className="subsection">
                    <Typography variant="h3" gutterBottom component="h3">
                        1. ‚öôÔ∏è Implementa√ß√£o de um Sistema de Fila para Inicializa√ß√£o Sequencial
                    </Typography>
                    <Paper className="codeSection">
                        <Typography component="pre" variant="body2">
                            {`
// Proposta de implementa√ß√£o: AuthInitQueue para orquestrar a inicializa√ß√£o

class AuthInitQueue {
  private queue: Array<() => Promise<void>> = [];
  private isProcessing: boolean = false;

  async enqueue(operation: () => Promise<void>) {
    this.queue.push(operation);
    if (!this.isProcessing) {
      await this.processQueue();
    }
  }

  private async processQueue() {
    this.isProcessing = true;
    while (this.queue.length > 0) {
      const operation = this.queue.shift();
      if (operation) {
        await operation();
      }
    }
    this.isProcessing = false;
  }
}
`}
                        </Typography>
                    </Paper>
                </Box>

                <Box className="subsection">
                    <Typography variant="h3" gutterBottom component="h3">
                        2. üßπ Estrat√©gia de Limpeza Autom√°tica (Garbage Collection) de Tokens Expirados
                    </Typography>
                    <Alert severity="warning" >
                        Implementar um processo de "garbage collection" no <code>TokenManager</code> para remover tokens expirados em intervalos regulares.
                    </ Alert>
                    <Paper className="codeSection">
                        <Typography component="pre" variant="body2">
                            {`
// Estrat√©gia de limpeza de tokens (exemplo)

class TokenManager {
  private cleanupInterval: number = 5 * 60 * 1000; // Intervalo de 5 minutos (configur√°vel)

  constructor() {
    this.startCleanupInterval(); // Inicia o processo de limpeza ao instanciar
  }

  startCleanupInterval() {
    setInterval(() => {
      this.removeExpiredTokens();
    }, this.cleanupInterval);
  }

  private removeExpiredTokens() {
    // ... Implementa√ß√£o da l√≥gica para identificar e remover tokens expirados ...
    console.log('TokenManager: Limpeza de tokens expirados executada.');
  }
}
`}
                        </Typography>
                    </Paper>
                </Box>
            </Box>

            <Box className="section">
                <Typography variant="h2" gutterBottom component="h2">
                    üîÑ Fluxo de Retry (Repeti√ß√£o) e Recupera√ß√£o do AuthService
                </Typography>

                <Paper className="codeSection">
                    <Typography component="pre" variant="body2">
                        {`// Estrat√©gia de retry (exemplo) para o AuthService

export const authRetryStrategy = {
  maxAttempts: 3,                 // M√°ximo de tentativas antes de falhar
  backoffMultiplier: 1.5,         // Multiplicador para backoff exponencial
  initialDelay: 1000,            // Delay inicial de 1 segundo
  timeout: 15000,               // Timeout total de 15 segundos por opera√ß√£o

  onRetry: (attempt: number, error: Error) => {
    coreLogger.logEvent(         // Log de cada tentativa de retry
      'AuthService',
      LOG_LEVELS.WARNING,
      'Auth retry attempt',
      { attempt, error }
    );
  }
};
`}
                    </Typography>
                </Paper>
            </Box>

            <Box className="section">
                <Typography variant="h2" gutterBottom component="h2">
                    üöÄ Pr√≥ximos Passos e A√ß√µes Recomendadas
                </Typography>

                <Box component="ul" sx={{ ml: 2 }}>
                    <Typography component="li" >
                        <strong>Implementar Sistema de Fila de Inicializa√ß√£o:</strong> Priorizar a cria√ß√£o e integra√ß√£o da <code>AuthInitQueue</code> para garantir a inicializa√ß√£o sequencial e correta dos servi√ßos.
                    </Typography>
                    <Typography component="li" >
                        <strong>Adicionar Garbage Collection ao <code>TokenManager</code>:</strong> Desenvolver e testar o mecanismo de limpeza autom√°tica de tokens para mitigar o vazamento de mem√≥ria.
                    </Typography>
                    <Typography component="li" >
                        <strong>Revisar Depend√™ncias Circulares:</strong> Investigar e resolver poss√≠veis depend√™ncias circulares no processo de inicializa√ß√£o para simplificar o fluxo e reduzir riscos de timing.
                    </Typography>
                    <Typography component="li" >
                        <strong>Aprimorar Logging de Erros de Autentica√ß√£o:</strong> Refinar o sistema de logging para erros relacionados √† autentica√ß√£o, facilitando o diagn√≥stico e a resolu√ß√£o de problemas futuros.
                    </Typography>
                </Box>
            </Box>
        </Box>
    );
};

export default AuthenticationDoc;