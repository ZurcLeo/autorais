//autorais-main/src/storage.rules
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // Regras para uploads gerais
    match /uploads/{allPaths=**} {
      // Permite leitura e escrita para qualquer usuário autenticado
      allow read, write: if request.auth != null;
    }

    // Regras para uploads de mídia no chat
    match /uploads/mensagens/{conversaId}/{mediaId} {
      // Permite leitura e escrita se o usuário faz parte da conversa
      allow read, write: if isUserPartOfConversation(conversaId);
    }

    // Função auxiliar para verificar se um usuário é parte da conversa
    function isUserPartOfConversation(conversaId) {
      let userIds = conversaId.split('_');
      return (request.auth.uid == userIds[0] || request.auth.uid == userIds[1]);
    }

    // Regras para fotos de perfil
    match /fotoDePerfil/{allPaths=**} {
      // Permite ler, escrever e apagar se o usuário estiver autenticado e o userId corresponder
      allow read, write: if request.auth != null;
    }

    // Regras para documentos anexados
    match /documentosAnexados/{userId}/{allPaths=**} {
      // Permite ler, escrever e apagar documentos na pasta do usuário
      allow read, write: if request.auth.uid == userId;
    }
    
match /media/{userId}/Privado/{allPaths=**} {
 allow read: if request.auth != null;
 allow write, update, create: if request.auth.uid == userId;
  }
  
match /media/{userId}/publico/{allPaths=**} {
 allow read: if request.auth != null;
  allow write, update, create: if request.auth.uid == userId;

  }

  match /presentes/{allPaths=**} {
    allow read;
    allow write, create, update: if request.auth != null;
}

  match /gifts/{allPaths=**} {
    allow read;
    allow write, create, update: if request.auth != null;
}

  match /publico/imgs/{allPaths=**} {
    allow read;
    allow write, create, update: if request.auth != null;
}
}
}
